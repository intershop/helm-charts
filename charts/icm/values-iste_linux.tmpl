test:
  enabled: true

icm-as:
  image:
    repository: "${ICM_TEST_IMAGE}"
  license:
    type: secret
    secret:
      name: intershop-license
  database:
    type: "${DATABASE_TYPE}"
    jdbcURL: "${DATABASE_CONNECTION_STRING}"
    jdbcUser: "${DATABASE_USER}"
    jdbcPassword: "${DATABASE_USER}"
  environment:
    CARTRIDGE_LIST: "ft_e2e_test"

    SERVER_DIRECTORY: "${SERVER_DIRECTORY}"
    HELM_DIRECTORY: "${HELM_DIRECTORY}"
    CONFIG_DIRECTORY: "${CONFIG_DIRECTORY}"
    RESULT_DIRECTORY: "${RESULT_DIRECTORY}"
    WORKSPACE_DIRECTORY: "${WORKSPACE_DIRECTORY}"
    SERVER_DIRECTORY_GROUP: "${SERVER_DIRECTORY_GROUP}"
    SERVER_DIRECTORY_USER: "${SERVER_DIRECTORY_USER}"

    INTERSHOP_SMTPSERVER: "${HELM_JOB_NAME}-mail" # adapt when service for mail is created
    INTERSHOP_WEBSERVERURL: "http://${HELM_JOB_NAME}-icm-web-wa:8080"
    INTERSHOP_WEBSERVERSECUREURL: "https://${HELM_JOB_NAME}-icm-web-wa:8443"

    # Disable Mailhog for now (#82978)
    MAIL_SMTP_MAILHOG_ENABLED: "false"

  persistence:
    sites:
      size: 1Gi
      type: cluster
      cluster:
        storageClass:
          existingClass: azurefile
    customdata:
      enabled: true
      existingClaim: icm-nfs
  datadog:
    enabled: true
    env: eng-iste-testrun
    options: "-Ddd.profiling.enabled=false -Ddd.trace.analytics.enabled=true -Ddd.jdbc.analytics.enabled=true"

icm-web:
  webadapter:
    image:
      repository: "${ICM_WEBSERVER_IMAGE}"
  agent:
    image:
      repository: "${ICM_WEBADAPTER_AGENT_IMAGE}"
  environment:
    HELM_DIRECTORY: "${HELM_DIRECTORY}"
  service:
    httpPort: 8080
    httpsPort: 8443
  persistence:
    pagecache:
      size: 1Gi
      type: cluster
    customdata:
      enabled: true
      existingClaim: icm-nfs

mail:
  image:
    repository: ishisteacr.azurecr.io/iste/iste-mail:1.0.0-SNAPSHOT

testrunner:
  image:
    repository: "${ICM_TEST_IMAGE}"
    command: |
      mkdir -p $HELM_DIRECTORY/result
      ls -la $HELM_DIRECTORY
      sh /intershop/bin/testrunner.sh -s=${TESTSUITE} -o=${RESULT_DIRECTORY} 2>&1 | tee -a ${RESULT_DIRECTORY}/istestrunner_log.txt
      PROCESS_ERROR_LEVEL=$?
      TEST_EXECUTION_RESULT_STATUS="failed"
      [ ${PROCESS_ERROR_LEVEL} = 0 ] && TEST_EXECUTION_RESULT_STATUS="success"
      [ ${PROCESS_ERROR_LEVEL} = 1 ] && top -b -n 1 > ${RESULT_DIRECTORY}/top.txt
      echo "result: ${TEST_EXECUTION_RESULT_STATUS}" > ${RESULT_DIRECTORY}/finished.yml
      echo "result-datetime: $(date)" >> ${RESULT_DIRECTORY}/finished.yml
  environment:
    CARTRIDGE_LIST: "app_bo_test"

    RESULT_DIRECTORY: "${RESULT_DIRECTORY}"

    MAIL_SERVER: "${HELM_JOB_NAME}-mail"

    TESTSUITE: "${TESTSUITE}"
    HOST: "${HELM_JOB_NAME}-icm-web-wa"

    APPSERVERNAME: "${HELM_JOB_NAME}-icm-as"
    MAIL_SHARE: "${HELM_DIRECTORY}/test-mails"

    PORT_HTTP: 8080
    PORT_HTTPS: 8443
    SERVLETENGINE_PORT: 7743

    #DEFAULT_PAGEDUMP_DIRECTORY: ${STACK_DIRECTORY}/pagedumps
    REMOVE_SUCCESSFUL_PAGEDUMPS: 'true'

  resources:
    requests:
      cpu: 1000m
      memory: 2Gi
    limits:
      cpu: 1000m
      memory: 2Gi
  initContainer:
    resources:
      requests:
        cpu: 1000m
        memory: 2Gi
      limits:
        cpu: 1000m
        memory: 2Gi
  replicaCount: 1
  podSecurityContext:
    runAsUser: 0
  persistence:
    testdata:
      size: 1Gi
      type: existingClaim
      existingClaim: icm-nfs
  datadog:
    enabled: true
    env: eng-iste-testrun
    options: "-Ddd.profiling.enabled=false -Ddd.trace.analytics.enabled=true -Ddd.jdbc.analytics.enabled=true"
  ## Control options regarding the java-vm running the ICM-AS
  jvm:
    # define options / parameters to be used to start the jvm
    options:
    # define additional options / parameters to be used to start the jvm (will be appended to options)
    additionalOptions:
