icm-as:
  podSecurityContext:
    runAsNonRoot: true

  podAnnotations:
    # as long as there are no long running job pods we need this annotation for icm-as
    "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"

  image:
  #  repository: intershophub/icm-as
  #  tag: :11.0.12-dev1

  ## define a secret for a container registry
  dockerSecret:
    enabled: false
    name: "dockerhub"
    username: "<your registry username>"
    password: "<your registry password>"

  imagePullSecrets:
  - "dockerhub"
  replicaCount: 1

  ## @param environment - extra environment variables to be set on containers
  environment:

  ## @param persistence - Either choose local (default), cluster, azurefiles or nfs persitence layer
  persistence:
    sites:
      size: 1Gi
      type: local
      local:
        path: <local sites folder>

  testConnection:
    protocol: https
    port: 8443
    url: /INTERSHOP/web/WFS/SMC
    serviceSuffix: -icm-web-wa

  mssql:
    enabled: false
    persistence:
      data:
        local:
          path: <local mssql data folder>
      backup:
        local:
          path: <local mssql backup folder>

  # Configuration for a replication/staging scenario
  replication:
    # enables/disables the replication support: whether or not this icm-as is part of a replication system
    enabled: false

    # defines the type of this replication system (source | target)
    role: <source|target>

    # if role=source the following properties are mandatory (otherwise they are ignored)
    # the external URL of the webServer/proxy/ingress e.g. https://icm-web-live-wa:443
    targetSystemUrl: <externalUrl>

    # the name of the (source) database to be used at the target-system to read data from e.g. intershop_edit
    sourceDatabaseName: <databaseName>

icm-web:
  enabled: true
  imagePullSecrets:
  - "dockerhub"
  webadapter:
    replicaCount: 1
    podAnnotations:
      # as long as there is no new cache system we need this annotation for icm-web
      "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"
    image:
      repository: intershophub/icm-webadapter:2.4.6
      secret: dockerhub
  agent:
    # in some REST-based environment the webadapteragent isn't mandatory
    enabled: true
    replicaCount: 1
    image:
      repository: intershophub/icm-webadapteragent:4.0.0
  persistence:
    pagecache:
      type: emptyDir

ingress-nginx:
  enabled: false

mailhog:
  enabled: false

test:
  enabled: false


# For redis deployment using a single master (and possibly multiple read replicas). May use redis sentinel.
# The whole dataset must fit into the single master node.
# See https://artifacthub.io/packages/helm/bitnami/redis
redis:
  enabled: false
  createConfigMap: true
  commonConfiguration: |
    maxmemory 2g
    maxmemory-policy volatile-lru
  auth:
    enabled: false
  architecture: replication
  replica:
    replicaCount: 3
  metrics:
    enabled: true

# For redis deployment using multiple masters (and possibly multiple read replicas).
# Supports sharding and can therefore be used for bigger datasets.
# See https://artifacthub.io/packages/helm/bitnami/redis
redis-cluster:
  enabled: false
  usePassword: false
  metrics:
    enabled: true
  redis:
    configMap: |
      maxmemory 2g
      maxmemory-policy volatile-lru
  cluster:
    # Total number of nodes in the cluster (replicas and master).
    # There must always be  at least 3 mater nodes, and the number of masters should be odd.
    nodes: 6
    # Number of replicas per master
    replicas: 1
