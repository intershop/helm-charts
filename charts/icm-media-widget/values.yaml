# Default values for icm-media-widget.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: icmbuild.azurecr.io/intershop/icm-media-widget
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.0.0-alpha"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

environments:
  DEBUGGING: "false"

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

deployment:
  container:
    port_1: 8080
    port_2: 8081
    port_3: 8082

service:
  type: ClusterIP
  port_1: 8080
  port_2: 8081
  port_3: 8082

ingress:
  enabled: true
  className: "nginx-icm"
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
  hosts:
    - host: icm-cdntest-int01.icm.intershop.de
      paths:
        - path: /mediawidget/web-component(/|$)(.*)
          pathType: ImplementationSpecific
          pathSuffix: "-keda-hip"
        - path: /mediawidget(/|$)(.*)
          pathType: ImplementationSpecific
          pathSuffix: ""
  tls:
    - secretName: tls-star-icm-intershop-de
      hosts:
        - icm-cdntest-int01.icm.intershop.de

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /mediawidget/q/health/live
    port: 8080
readinessProbe:
  httpGet:
    path: /mediawidget/q/health/ready
    port: 8080

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# Worker configuration
worker:
  replicaCount: 1
  image:
    repository: icmbuild.azurecr.io/intershop/icm-media-widget-worker
    pullPolicy: Always
    tag: "1.0.0-alpha"
  service:
    type: ClusterIP
    port: 8080
  environments:
    AZURE_BLOB_STORAGE_CONNECTION: <your connection string>
  resources: {}
  livenessProbe:
    httpGet:
      path: /q/health/live
      port: 8080
  readinessProbe:
    httpGet:
      path: /q/health/ready
      port: 8080
  volumes: []
  volumeMounts: []
  nodeSelector: {}
  tolerations: []
  affinity: {}

imgproxy:
  image:
    repo: ghcr.io/imgproxy/imgproxy
    tag: v3.30.0
  env:
    IMGPROXY_USE_ABS: "true"
    IMGPROXY_ABS_NAME: "chaptersbinfrastorage"
    IMGPROXY_ABS_KEY: "<your azure blob storage key>"
    IMGPROXY_PATH_PREFIX: "/imgproxy"
  resources:
    ingress:
      enabled: true
      className: "nginx-icm"
      hosts:
        - icm-cdntest-int01.icm.intershop.de
      tls:
        - secretName: tls-star-icm-intershop-de
          hosts:
            - icm-cdntest-int01.icm.intershop.de
