= `values.yaml` Attributes in Section `ingress`

:icons: font

:mandatory: image:../images/mandatory.webp[]
:optional: image:../images/optional.webp[]
:conditional: image:../images/conditional.webp[]

== Description

Configures if and how an https://kubernetes.io/docs/concepts/services-networking/ingress/[ingress] configuration is deployed that points to the `icm-as-wa` service. The following table lists the attributes of the `ingress` section:

[CAUTION]
====
Enabling this ingress only makes sense if the link:../../../icm-as/docs/values-yaml/web-layer.asciidoc[`webLayer`] is *not* enabled. Otherwise, the `icm-as` will not be able to process the requests as expected.
====

[cols="1,3,1,1,1",options="header"]
|===
|Attribute |Description |Type |Mandatory |Default Value
|enabled|Enables/disables the deployment of the ingress configuration|boolean|{optional}|`false`
|className|The name of the ingress class to be used|string|{optional}|[.placeholder]#https://kubernetes.io/docs/concepts/services-networking/ingress/#default-ingress-class[default ingress class]#
|annotations|Annotations to be applied to the ingress configuration|<<_annotations,Annotations>>|{optional}|`{}`
|hosts|Lists the hosts for the ingress rules|yaml array containing 0 to n <<_hostDefinition,HostDefinition>> objects|{mandatory}|-
|tls|Configures the SSL/TLS termination of the processed hosts|yaml array containing 0 to n <<_tlsDefinition,TLSDefinition>> objects|{optional}|`[]`
|===

[WARNING]
====
Although the default for `tls` attribute is an empty array, this default is usually not practical. In most cases, the ingress should handle TLS termination.
====

[#_annotations]
=== Type `Annotations`

The `Annotations` type is a yaml object containing key-value pairs that are applied as annotations. It contains the following attributes:

=== Example
[source,yaml]
----
annotations:
  annotation0: value0
  ...
  annotationn: valuen
----

[#_hostDefinition]
=== Type `HostDefinition`

The `HostDefinition` type configures the rules applied to the ingress configuration (e.g., which host / path is routed to which backend service). It contains the following attributes:

[cols="1,3,1,1,1",options="header"]
|===
|Attribute |Description |Type |Mandatory |Default Value
|host|Name of the host|string|{mandatory}|-
|paths|Configures the paths to be processed|yaml array containing 0 to n <<_hostPath,HostPath>> objects|{mandatory}|-
|===

[#_hostPath]
=== Type `HostPath`

The type `HostPath` configures the path mapping applied to the ingress configuration (e.g., which path is routed to which backend service). It contains the following attributes:

[cols="1,3,1,1,1",options="header"]
|===
|Attribute |Description |Type |Mandatory |Default Value
|path|Path to be processed|string|{mandatory}|-
|pathType|https://kubernetes.io/docs/concepts/services-networking/ingress/#path-types[Type of the path]|https://kubernetes.io/docs/concepts/services-networking/ingress/#path-types[path type]|{mandatory}|-
|===

[#_tlsDefinition]
=== Type `TLSDefinition`

The type `TLSDefinition` configures which TLS secret should be used for the assigned host(s). It contains the following attributes:

[cols="1,3,1,1,1",options="header"]
|===
|Attribute |Description |Type |Mandatory |Default Value
|secretName|Name of secret|string|{mandatory}|-
|hosts|Lists the hosts that should use the certificate|yaml array containing 0 to n host names|{mandatory}|-
|===

=== Example

[source,yaml]
----
ingress:
  enabled: true
  className: icm-nginx
  annotations:
    annotation0: value0
    ...
    annotationn: valuen
  hosts:
    - host: my-host.icm.intershop.de
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: tls-my-host-icm-intershop-de
      hosts:
        - my-host.icm.intershop.de
----
