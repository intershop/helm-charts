# Default values for icm-webadapter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

# defined where the application shall run on
nodeSelector: []
#  agentpool: <your agentpool>

webadapter:
  image:
    repository: intershophub/icm-webadapter:2.4.0
    pullPolicy: IfNotPresent
    command: |
      /intershop/bin/intershop.sh
  # disable HTTP/2 protocol support if required
  disableHTTP2: false
  customHttpdConfig: false
  # provides custom certificates for webadapter
  customSSLCertificates: false
  overrideSSL: false
  replicaCount: 1

  # define custom annotations for deployment and pods:
  deploymentAnnotations: []
  #  myAnnotation: true
  podAnnotations: []
  #  myAnnotation: true

  # define custom labels for deployment and pods:
  deploymentLabels: []
  #  tags.datadoghq.com/env: hell
  #  tags.datadoghq.com/service: icm-web-waa
  #  tags.datadoghq.com/version: 11.0.0
  podLabels: []
  #  tags.datadoghq.com/env: hell
  #  tags.datadoghq.com/service: icm-web-waa
  #  tags.datadoghq.com/version: 11.0.0

agent:
  # in some REST-based environment the webadapteragent isn't mandatory
  enabled: true
  image:
    repository: intershophub/icm-webadapteragent:4.0.0
    pullPolicy: IfNotPresent
    command: |
      /intershop/bin/start-waa.sh
  replicaCount: 1

  # define custom annotations for deployment and pods:
  deploymentAnnotations: []
  #  myAnnotation: true
  podAnnotations: []
  #  myAnnotation: true

  # define custom labels for deployment and pods:
  deploymentLabels: []
  #  tags.datadoghq.com/env: hell
  #  tags.datadoghq.com/service: icm-web
  #  tags.datadoghq.com/version: 11.0.0
  podLabels: []
  #  tags.datadoghq.com/env: hell
  #  tags.datadoghq.com/service: icm-web
  #  tags.datadoghq.com/version: 11.0.0

## Optionally specify an array of imagePullSecrets. Secrets must be manually created in the namespace.
## https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
imagePullSecrets:
- "dockerhub"

persistence:
  pagecache:
    size: 1Gi
    # type cluster | nfs | azurefiles | existingClaim | local
    type: local
    existingClaim: claimName
    cluster:
      storageClass: azurefile
    azurefiles:
      shareName: icm-as-share
      secretName: icm-as-share-secret
    nfs:
      server: <ipaddress or hostname>
      path: <server folder>
    local:
      path: <local folder>
  customdata:
    enabled: false
    existingClaim: icm-as-cluster-customData-pvc
    mountPoint: /data

resources:
  webadapter:
    enabled: false
    memory_lim: 100Mi
    memory_req: 100Mi
  agent:
    enabled: false
    memory_lim: 200Mi
    memory_req: 200Mi

ingress:
  enabled: false

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  httpPort: 80
  httpsPort: 443

podSecurityContext:
  # intershop user - defined by icm-base-docker image
  runAsUser: 150

appServerConnection:
  serviceName: icm-as
  port: 7743

environment: []
