{{- if .Values.cache.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pwa-cache.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "pwa-cache.name" . }}
    helm.sh/chart: {{ include "pwa-main.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.cache.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "pwa-cache.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "pwa-cache.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      {{- if .Values.cache.podAnnotations }}
      annotations:
      {{- toYaml .Values.cache.podAnnotations | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.cache.image.repository }}:{{ .Values.cache.image.tag }}"
          imagePullPolicy: {{ .Values.cache.image.pullPolicy }}
          volumeMounts:
          - name: multi-channel-config
            readOnly: true
            mountPath: "/config"
          env:
          - name: HELM_RELEASE_REVISION
            value: "{{ .Release.Revision }}"
          - name: UPSTREAM_PWA
            value: "http://{{ include "pwa-main.fullname" . }}:{{ .Values.service.port }}"
          - name: ICM_BASE_URL
            value: "{{ coalesce .Values.upstream.icm .Values.upstream.icmBaseURL }}"
          - name: MULTI_CHANNEL_SOURCE
            value: "/config/multi-channel.yaml"
          - name: CACHING_IGNORE_PARAMS_SOURCE
            value: "/config/caching-ignore-params.yaml"
        {{- if .Values.cache.metrics.enabled }}
          - name: PROMETHEUS
            value: "true"
        {{- end }}
        {{- range $key, $obj := .Values.cache.extraEnvVars }}
          - name: {{ $obj.name }}
            value: {{ $obj.value | quote }}
        {{- end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          {{- if .Values.cache.metrics.enabled }}
            - name: metrics
              containerPort: 9113
              protocol: TCP
          {{- end }}
          livenessProbe:
            {{- if empty .Values.cache.livenessProbe }}
            {{- else }}
              {{- with .Values.cache.livenessProbe }}
              {{- toYaml . | nindent 12 }}
              {{- end }}
            {{- end }}
          readinessProbe:
            {{- if empty .Values.cache.readinessProbe }}
            {{- else }}
              {{- with .Values.cache.readinessProbe }}
              {{- toYaml . | nindent 12 }}
              {{- end }}
            {{- end }}
          resources:
            {{- toYaml .Values.cache.resources | nindent 12 }}
      volumes:
      - name: multi-channel-config
        configMap:
            name: {{ include "pwa-cache.fullname" . }}-gomplate-datasources
            items:
              - key: multi-channel.yaml
                path: multi-channel.yaml
              - key: caching-ignore-params.yaml
                path: caching-ignore-params.yaml

      {{- with .Values.cache.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.cache.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.cache.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end -}}
