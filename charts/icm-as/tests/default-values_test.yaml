suite: test with default values
templates:
  - templates/as-deployment.yaml
  - templates/as-service.yaml
  - templates/config-license-xml-cm.yaml
tests:
  - it: as-deployment is correct
    release:
      name: icm-as
    chart:
      version: 0.8.15
      appVersion: 11.0.1
    values:
      - ../values.yaml
    template: templates/as-deployment.yaml
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: metadata.name
          value: icm-as
      #metadata.labels
      - equal:
          path: metadata.labels.app
          value: icm-as
      - equal:
          path: metadata.labels.chart
          value: icm-as-0.8.15
      #spec.selector
      - equal:
          path: spec.selector.matchLabels.app
          value: icm-as
      - equal:
          path: spec.selector.matchLabels.release
          value: icm-as
      #spec.template.metadata
      - equal:
          path: spec.template.metadata.labels.app
          value: icm-as
      - equal:
          path: spec.template.metadata.labels.app
          value: icm-as
      #spec.template.spec.containers
      - equal:
          path: spec.template.spec.containers[0].name
          value: icm-as-server
      - equal:
          path: spec.template.spec.containers[0].imagePullPolicy
          value: IfNotPresent
      #spec.template.spec.containers[0].env
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: IS_DBPREPARE
            value: "false"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: SERVER_NAME
            value: "appserver"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: CARTRIDGE_LIST
            value: "ft_icm_as"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: INTERSHOP_DATABASETYPE
            value: "mssql"
      #spec.template.spec.containers[0].ports
      - contains:
          path: spec.template.spec.containers[0].ports
          content:
            name: http
            containerPort: 7743
            protocol: TCP
      - contains:
          path: spec.template.spec.containers[0].ports
          content:
            name: jmx
            containerPort: 7747
            protocol: TCP
      #spec.template.spec.containers[0].resources
      - equal:
          path: spec.template.spec.containers[0].resources.limits.cpu
          value: 1000m
      - equal:
          path: spec.template.spec.containers[0].resources.limits.memory
          value: 3Gi
      - equal:
          path: spec.template.spec.containers[0].resources.requests.cpu
          value: 1000m
      - equal:
          path: spec.template.spec.containers[0].resources.requests.memory
          value: 3Gi
      #spec.template.spec.containers[0].volumeMounts
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            mountPath: /intershop/license/license.xml
            name: license-volume
            readOnly: true
            subPath: license.xml
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            mountPath: /intershop/sites
            name: sites-volume
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            mountPath: /intershop/customizations
            name: customizations-volume
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            mountPath: /intershop/jgroups-share
            name: jgroups-volume
      #spec.template.spec.<misc>
      - equal:
          path: spec.template.spec.dnsPolicy
          value: ClusterFirst
      - equal:
          path: spec.template.spec.restartPolicy
          value: Always
      - equal:
          path: spec.template.spec.schedulerName
          value: default-scheduler
      - equal:
          path: spec.template.spec.terminationGracePeriodSeconds
          value: 30
      #spec.template.spec.securityContext
      - equal:
          path: spec.template.spec.securityContext.runAsGroup
          value: 150
      - equal:
          path: spec.template.spec.securityContext.runAsUser
          value: 150
      #spec.template.spec.volumes
      - contains:
          path: spec.template.spec.volumes
          content:
            name: license-volume
            configMap:
              defaultMode: 420
              name: icm-as-license
      - contains:
          path: spec.template.spec.volumes
          content:
            name: jgroups-volume
            emptyDir: {}
      - contains:
          path: spec.template.spec.volumes
          content:
            name: sites-volume
            persistentVolumeClaim:
              claimName: "icm-as-local-sites-pvc"
      - contains:
          path: spec.template.spec.volumes
          content:
            name: customizations-volume
            emptyDir: {}


  - it: config-license-xml-cm is correct
    release:
      name: icm-as
    chart:
      version: 0.8.15
    values:
      - ../values.yaml
    template: templates/config-license-xml-cm.yaml
    asserts:
      - isKind:
          of: ConfigMap
      - equal:
          path: metadata.name
          value: icm-as-license
      #metadata.labels
      - equal:
          path: metadata.labels.app
          value: icm-as-license
      - equal:
          path: metadata.labels.chart
          value: icm-as-0.8.15
      #data
      - equal:
          path: data.license\.xml
          value: "<your license>"


  - it: as-service is correct
    release:
      name: icm-as
    chart:
      version: 0.8.15
    values:
      - ../values.yaml
    template: templates/as-service.yaml
    asserts:
      - isKind:
          of: Service
      - equal:
          path: metadata.name
          value: icm-as
      #metadata.labels
      - equal:
          path: metadata.labels.app
          value: icm-as
      - equal:
          path: metadata.labels.chart
          value: icm-as-0.8.15
      #spec.ports
      - contains:
          path: spec.ports
          content:
            name: "7743"
            port: 7743
            targetPort: 7743
      #spec.selector
      - equal:
          path: spec.selector.app
          value: icm-as
      #status
      - isEmpty:
          path: status.loadBalancer
