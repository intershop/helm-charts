suite: tests correctness of newrelic section
templates:
  - templates/as-deployment.yaml
  - templates/config-newrelic-yaml-cm.yaml
tests:
  - it: newrelic is enabled so apm and metrics are enabled
    release:
      name: icm-as
    chart:
      version: 0.8.15
    values:
      - ../values.yaml
    set:
      newrelic.enabled: true
    template: templates/as-deployment.yaml
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: ENABLE_NEWRELIC
            value: "true"
      - equal:
          path: spec.template.metadata.annotations
          value:
            prometheus.io/path: /metrics
            prometheus.io/port: "7744"
            prometheus.io/scrape: "true"
  - it: newrelic is enabled apm is disabled
    release:
      name: icm-as
    chart:
      version: 0.8.15
    values:
      - ../values.yaml
    set:
      newrelic.enabled: true
      newrelic.apm.enabled: false
    template: templates/as-deployment.yaml
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: ENABLE_NEWRELIC
            value: "false"
      - equal:
          path: spec.template.metadata.annotations
          value:
            prometheus.io/path: /metrics
            prometheus.io/port: "7744"
            prometheus.io/scrape: "true"
  - it: newrelic is enabled metrics are disabled
    release:
      name: icm-as
    chart:
      version: 0.8.15
    values:
      - ../values.yaml
    set:
      newrelic.enabled: true
      newrelic.metrics.enabled: false
    template: templates/as-deployment.yaml
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: ENABLE_NEWRELIC
            value: "true"
      - equal:
          path: spec.template.metadata.annotations
          value:
            prometheus.io/path: /metrics
            prometheus.io/port: "7744"
            prometheus.io/scrape: "false"
  - it: newrelic license key
    release:
      name: icm-as
    chart:
      version: 0.8.15
    values:
      - ../values.yaml
    set:
      newrelic.enabled: true
      newrelic.license_key: "secret-license-test"
    template: templates/as-deployment.yaml
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: NEW_RELIC_LICENSE_KEY
            value: "secret-license-test"
  - it: newrelic license key secret key ref
    release:
      name: icm-as
    chart:
      version: 0.8.15
    values:
      - ../values.yaml
    set:
      newrelic.enabled: true
      newrelic.licenseKeySecretKeyRef.name: "your-company-prd-secrets"
      newrelic.licenseKeySecretKeyRef.key: "secret-license-test"
    template: templates/as-deployment.yaml
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: NEW_RELIC_LICENSE_KEY
            valueFrom:
              secretKeyRef:
                key: secret-license-test
                name: your-company-prd-secrets
  - it: should take newrelic license key secret key ref precedence over plain text license key
    release:
      name: icm-as
    chart:
      version: 0.8.15
    values:
      - ../values.yaml
    set:
      newrelic.enabled: true
      newrelic.license_key: "should-not-appear"
      newrelic.licenseKeySecretKeyRef.name: "your-company-prd-secrets"
      newrelic.licenseKeySecretKeyRef.key: "secret-license-test"
    template: templates/as-deployment.yaml
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: NEW_RELIC_LICENSE_KEY
            valueFrom:
              secretKeyRef:
                key: secret-license-test
                name: your-company-prd-secrets
      - notContains:
          path: spec.template.spec.containers[0].env
          content:
            name: NEW_RELIC_LICENSE_KEY
            value: "should-not-appear"
  - it: newrelic app_name from operationalContext (default values)
    release:
      name: icm-as
    chart:
      version: 0.8.15
    values:
      - ../values.yaml
    set:
      newrelic.enabled: true
      operationalContext.environmentName: int_01
    template: templates/config-newrelic-yaml-cm.yaml
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data["newrelic.yml"]
          pattern: ".*(app_name : \"n_a-int_01-icm-standalone\").*"
  - it: newrelic custom appName
    release:
      name: icm-as
    chart:
      version: 0.8.15
    values:
      - ../values.yaml
    set:
      newrelic.enabled: true
      newrelic.appName: icm
    template: templates/config-newrelic-yaml-cm.yaml
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data["newrelic.yml"]
          pattern: ".*(app_name : \"icm\").*"
  - it: newrelic custom deprecated app_name
    release:
      name: icm-as
    chart:
      version: 0.8.15
    values:
      - ../values.yaml
    set:
      newrelic.enabled: true
      newrelic.app_name: icm
    template: templates/config-newrelic-yaml-cm.yaml
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data["newrelic.yml"]
          pattern: ".*(app_name : \"icm\").*"
  - it: newrelic custom appName with precedence over deprecated app_name
    release:
      name: icm-as
    chart:
      version: 0.8.15
    values:
      - ../values.yaml
    set:
      newrelic.enabled: true
      newrelic.app_name: icm-deprecate-name
      newrelic.appName: icm
    template: templates/config-newrelic-yaml-cm.yaml
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data["newrelic.yml"]
          pattern: ".*(app_name : \"icm\").*"
