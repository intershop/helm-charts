= Documentation about the `values.yaml` attributes belonging to section `mssql`
include::definitions.include[]

[.tag-audience]#Developer, Test#

=== Description

Enables and configures the deployment of a separate pod running an MSSQL database. The following table lists the attributes of the `mssql` section:

[cols="1,3,1,1,1",options="header"]
|===
|Attribute |Description |Type |Mandatory |Default Value
|enabled|enables/disables the deployment of the MSSQL database pod|boolean|{optional}|`false`
|recreation|if `true` the database/schema is recreated|boolean|{optional}|`false`
|resources|configures the https://kubernetes.io/docs/tasks/configure-pod-container/assign-pod-level-resources/[`resource`] definitions (`requests`, `limits`) for the MSSQL container|see <<no-section.asciidoc#_example_resources,resources>>|{optional}|[.placeholder]#<<_resourcesDefault,resources default>>#
|image|configures the Docker image to be used for the MSSQL container|<<_imageType,Image>>|{optional}|[.placeholder]#<<_imageDefault,image default>>#
|acceptEula|the author of MSSQL requires all users of the software to explicitly access the EULA. This attribute contains the value for this acceptance.|enum {`Y`,`N`}|{optional}|`N`
|saPassword|the MSSQL contains a script that requires to first create the SA user. This attribute contains the password to be used for this user.|string|{optional}|`1nstershop5A`
|databaseName|the name of the database to be created during startup on demand.|string|{optional}|`icmdb`
|user|for the database named by attribute `databaseName` a user is created. This attribute contains the name of that user.|string|{optional}|`icmdbuser`
|password|for the database named by attribute `databaseName` a user is created. This attribute contains the password of that user.|string|{conditional} mandatory if `passwordSecretKeyRef` is not set |`icmdbpassword`
|passwordSecretKeyRef|same as `password` but the password comes out of a Kubernetes secret. This attribute is a secret key reference pointing to that secret. *Takes precedence over `password`.* |<<_secretKeyRef,SecretKeyRef>>|{conditional} mandatory if `password` is not set |-
|persistence|configures where to store the database files.|<<#_storages,Storages>>|{optional}|see [.placeholder]#<<_dataDefault,data default>># and [.placeholder]#<<_backupDefault,backup default>>#
|===

[CAUTION]
====
When enabling the deployment of the MSSQL database, keep in mind to also configure the usage of this database in the link:database.asciidoc[database] section. Use the following attribute values (when using default values):

* `jdbcURL`: `jdbc:sqlserver://icm-as-mssql:1433;database=icmdb;`
* `jdbcUser`: `icmdbuser`
* `jdbcPassword`: `icmdbpassword`

*Attention*: the host name inside the `jdbcURL` depends on the release name, chart name, <<no-section.asciidoc#_example_nameOverride,`nameOverride`>> and <<no-section.asciidoc#_example_nameOverride,`fullnameOverride`>>.
====

[#_storages]
==== `Storages`

The MSSQL database requires one storage for its _normal_ data and one for its backup data. So the `Storages` type contains the following attributes:

[cols="1,3,1,1,1",options="header"]
|===
|Attribute |Description |Type |Mandatory |Default Value
|data|configures the storage for _normal_ data.|<<persistence.asciidoc#_persistenceType,Persistence>>|{optional}|[.placeholder]#<<_dataDefault,data default>>#
|backup|configures the storage for backup data.|<<persistence.asciidoc#_persistenceType,Persistence>>|{optional}|[.placeholder]#<<_backupDefault,backup default>>#
|===

[#_imageType]
==== Type `Image`

The type `Image` configures the Docker image to be used for the MSSQL container. It contains the following attributes:

[cols="1,3,1,1,1",options="header"]
|===
|Attribute |Description |Type |Mandatory |Default Value
|repository|https://kubernetes.io/docs/concepts/containers/images/#image-names[image] to be used.|image reference|{optional}|`intershophub/mssql-intershop:2022-latest`
|===

[NOTE]
====
In contrast to other image configurations, this configuration does not allow to set the `pullPolicy`. It is always set to `IfNotPresent`.
====

[#_secretKeyRef]
==== Type `SecretKeyRef`

The type `SecretKeyRef` contains the following attributes to reference a value inside of a Kubernetes secret:

[cols="1,3,1,1,1",options="header"]
|===
|Attribute |Description |Type |Mandatory |Default Value
|name|name of the secret|string|{mandatory}|-
|key|key inside the secret pointing to the referenced value|string|{mandatory}|-
|===


=== Defaults

[#_resourcesDefault]
.Default `resources`
[source,yaml]
----
resources:
  limits:
    cpu: 1000m
    memory: 2Gi
  requests:
    cpu: 1000m
    memory: 2Gi
----

[#_imageDefault]
.Default `image`
[source,yaml]
----
image:
  repository: "intershophub/mssql-intershop:2022-latest"
----

[#_dataDefault]
.Default `data` in type `Storages`
[source,yaml]
----
  data:
    size: 5Gi
    type: local
    local:
      path: <local mssql data folder>
----

[#_backupDefault]
.Default `backup` in type `Storages`
[source,yaml]
----
  data:
    size: 5Gi
    type: local
    local:
      path: <local mssql backup folder>
----

==== Example

The following example uses most of the default values:

[source,yaml]
----
mssql:
  enabled: true <1>
  acceptEula: "Y" <2>
  persistence:
    data:
      local:
        path: /run/desktop/mnt/host/d/mssql/data <3>
    backup:
      local:
        path: /run/desktop/mnt/host/d/mssql/backup <4>
----

<1> enables the MSSQL database deployment
<2> accepts the EULA
<3> uses the local path `/run/desktop/mnt/host/d/mssql/data` for the MSSQL data
<4> uses the local path `/run/desktop/mnt/host/d/mssql/backup` for the MSSQL backup
