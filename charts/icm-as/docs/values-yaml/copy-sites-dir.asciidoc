= Documentation about the `values.yaml` attributes belonging to section `copySitesDir`

// GitHub issue: https://github.com/github/markup/issues/1095

:icons: font

ifdef::backend-html5[]
++++
<style>
.mand {
  color: #e00000;
}
.opt {
  color: #b0adac;
}
.cond {
  color: #FFDC00;
}
.tag-audience {
  font-style: italic;
}
.tag-audience::before {
  content: "@Target Audience: ";
}
.tag-since {
  font-style: italic;
}
.tag-since::before {
  content: "@Since: ";
}
.tag-deprecated {
  font-style: italic;
}
.tag-deprecated::before {
  content: "@Deprecated: ";
}
.placeholder {
  font-style: italic;
}
.placeholder::before {
  content: "<";
}
.placeholder::after {
  content: ">";
}
</style>
++++
endif::[]

:mandatory: icon:check[role="mand"]
:optional: icon:times[role="opt"]
:conditional: icon:question[role="cond"]


[.tag-audience]#Developer, Tester, DevOps#

=== Description

Allows to have files copied from a directory into the sites directory/volume of the `icm-as` container. This is
done by an https://kubernetes.io/docs/concepts/workloads/pods/init-containers/[init container] using the `icm-as` image that runs before the `icm-as` container starts.
The `copySitesDir` section contains the following attributes:

[cols="1,3,1,1,1",options="header"]
|===
|Attribute |Description |Type |Mandatory|Default Value
|enabled|enable/disable this feature|boolean|{optional}|`false`
|fromDir|source folder of the files/folder to be copied|absolute path|{mandatory}|-
|resultDir|folder for a `sites.txt` containing all the files inside of the `sites` volume|absolute path|{mandatory}|-
|chmodUser|user name/uid to be applied to all the files inside of the sites volume|user name/uid|{mandatory}|-
|chmodGroup|group name/gid to be applied to all the files inside of the sites volume|group name/gid|{mandatory}|-
|===

=== Example

[source,yaml]
----
copySitesDir:
  enabled: true
  fromDir: /some/custom/sites/files
  resultDir: /some/custom/sites
  chmodUser: intershop
  chmodGroup: intershop
----
This example will copy all files and folders from `/some/custom/sites/files` into the sites volume of the `icm-as` container and create a file `/some/custom/sites/sites.txt` containing all the files inside the sites volume. All files will be owned by `intershop:intershop`.
