= `values.yaml` Attributes in Section `replication`

:icons: font

:mandatory: image:../images/mandatory.webp[]
:optional: image:../images/optional.webp[]
:conditional: image:../images/conditional.webp[]


== Description

Configures the `icm-as-server` regarding mass data and object replication. The following attributes are available:

[cols="1,3,1,1,1",options="header"]
|===
|Attribute |Description |Type |Mandatory |Default Value
|enabled|If `true`, the deployed ICM is a replication system|boolean|{optional}|`false`
|role|Defines whether this `icm-as-server` is a source (_edit_) or a target (_life_) system|enum {`source`,`target`}|{mandatory}|-
|source|Configures all the connections to the source (_edit_) system|<<_source,Source>>|{mandatory}|-
|targets|Configures all the connections to all the target (_life_) systems|<<_targets,Targets>>|{mandatory}|-
|===

[#_source]
=== Type `Source`

The `Source` type contains the following attributes:

[cols="1,3,1,1,1",options="header"]
|===
|Attribute |Description |Type |Mandatory |Default Value
|webserverUrl|The most external *HTTPS* URL pointing to the source system|url|{mandatory}|-
|databaseLink|Name of the database link pointing to the source system database|string|{conditional} mandatory if `databaseName` is not set|-
|databaseName|Name of the source system database|string|{conditional} mandatory if `databaseLink` is not set|-
|databaseUser|User of the source system database|string|{mandatory}|-
|===

[IMPORTANT]
====
Either `databaseLink` (connect using a database link) (x)or `databaseName` (connect using another schema inside the same server) must be set, but not both. *Ensure that the database users of the target system have access either to the database link or to the source database schema.*
====

[CAUTION]
====
The `webserverUrl` is meant to be the most external *HTTPS* URL pointing to the source system. This is usually the component, e.g., ingress, that does the SSL/TLS termination.
====

[#_targets]
=== Type `Targets`

The `Targets` type lists all the connected target systems (1 to n). Each entry in this list is a yaml object of type <<_target,`Target`>>. This means that the `Targets` type contains 1 to n attributes (each of type <<_target,`Target`>>). The attribute name is a symbolic name of the target system.

[#_target]
=== Type `Target`

The `Target` type defines a single target system. It contains the following attributes:

[cols="1,3,1,1,1",options="header"]
|===
|Attribute |Description |Type |Mandatory |Default Value
|webserverUrl|The most external *HTTPS* URL pointing to the target system|url|{mandatory}|-
|databaseName|Name of the database of the target system|string|{mandatory}|-
|===

[CAUTION]
====
The `webserverUrl` is meant to be the most external *HTTPS* URL pointing to the target system. This is usually the component, e.g., ingress, that performs the SSL/TLS termination.
====


=== Example

[source,yaml]
----
replication:
  enabled: true
  role: source
  source:
    webserverUrl: https://edit.my-icm.com:443
    databaseUser: icmdbuser-edit
    databaseName: icmdb-edit

  targets:
    live1:
      webserverUrl: https://life1.my-icm.com:443
      databaseUser: icmdb-life1
    live2:
      webserverUrl: https://life2.my-icm.com:443
      databaseUser: icmdb-life2
----

Configure a source (_edit_) system connected to two target (_life_) systems. The configuration for each target system should be identical, except for the `role` attribute, which must be `target`.
