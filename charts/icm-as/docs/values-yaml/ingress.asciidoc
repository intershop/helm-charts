= Documentation about the `values.yaml` attributes belonging to section `ingress`
include::definitions.include[]

=== Description

Configures if and how an https://kubernetes.io/docs/concepts/services-networking/ingress/[ingress] configuration is deployed that points to use for the `icm-as-server` service. The following table lists the attributes of the `ingress` section:

[CAUTION]
====
Enabling this ingress only makes sense if the link:web-layer.asciidoc[`webLayer`] is also enabled. Otherwise, the `icm-as` will not be able to process the requests as expected.
====

[cols="1,3,1,1,1",options="header"]
|===
|Attribute |Description |Type |Mandatory |Default Value
|enabled|enables/disables the deployment of the ingress configuration|boolean|{optional}|`false`
|className|the name of the ingress class to be used|string|{optional}|[.placeholder]#https://kubernetes.io/docs/concepts/services-networking/ingress/#default-ingress-class[default ingress class]#
|annotations|annotations to be applied to the ingress configuration|<<_annotations,Annotations>>|{optional}|`{}`
|hosts|lists the hosts for the ingress rules|yaml array containing 0 to n <<_hostDefinition,HostDefinition>> objects|{mandatory}|-
|tls|configures the SSL/TLS termination of the processed hosts|yaml array containing 0 to n <<_tlsDefinition,TLSDefinition>> objects|{optional}|`[]`
|===

[WARNING]
====
Although the default for attribute `tls` is an empty array, that default most often does not make any sense because in most cases the ingress should do the TLS termination.
====

[#_annotations]
==== Type `Annotations`

The type `Annotations` is a yaml object containing key-value pairs that are applied as annotations. It contains the following attributes:

===== Example
[source,yaml]
----
annotations:
  annotation0: value0
  ...
  annotationn: valuen
----

[#_hostDefinition]
==== Type `HostDefinition`

The type `HostDefinition` configures the rules applied to the ingress configuration (e.g. which host / path is routed to which backend service). It contains the following attributes:

[cols="1,3,1,1,1",options="header"]
|===
|Attribute |Description |Type |Mandatory |Default Value
|host|name of the host|string|{mandatory}|-
|paths|configures the paths to be processed|yaml array containing 0 to n <<_hostPath,HostPath>> objects|{mandatory}|-
|===

[#_hostPath]
==== Type `HostPath`

The type `HostPath` configures the path mapping applied to the ingress configuration (e.g. which path is routed to which backend service). It contains the following attributes:

[cols="1,3,1,1,1",options="header"]
|===
|Attribute |Description |Type |Mandatory |Default Value
|path|the path to be processed|string|{mandatory}|-
|pathType|the https://kubernetes.io/docs/concepts/services-networking/ingress/#path-types[type of the path]|https://kubernetes.io/docs/concepts/services-networking/ingress/#path-types[path type]|{mandatory}|-
|===

[#_tlsDefinition]
==== Type `TLSDefinition`

The type `TLSDefinition` configures which TLS secret should be used for the assigned host(s). It contains the following attributes:

[cols="1,3,1,1,1",options="header"]
|===
|Attribute |Description |Type |Mandatory |Default Value
|secretName|name of secret|string|{mandatory}|-
|hosts|lists the hosts that should use the certificate|yaml array containing 0 to n host names|{mandatory}|-
|===

=== Example

[source,yaml]
----
ingress:
  enabled: true
  className: icm-nginx
  annotations:
    annotation0: value0
    ...
    annotationn: valuen
  hosts:
    - host: my-host.icm.intershop.de
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: tls-my-host-icm-intershop-de
      hosts:
        - my-host.icm.intershop.de
----

