= Documentation about what can be configured using the `values.yaml`-file
//include::values-yaml/definitions.include[]
// GitHub issue: https://github.com/github/markup/issues/1095
:icons: font

ifdef::backend-html5[]
++++
<style>
.mand {
  color: #e00000;
}
.opt {
  color: #b0adac;
}
.cond {
  color: #FFDC00;
}
.tag-audience {
  font-style: italic;
}
.tag-audience::before {
  content: "@Target Audience: ";
}
.tag-since {
  font-style: italic;
}
.tag-since::before {
  content: "@Since: ";
}

</style>
++++
endif::[]

:mandatory: icon:check[role="mand"]
:optional: icon:times[role="opt"]
:conditional: icon:question[role="cond"]

== Target audience

This document is intended for users of the Intershop Commerce Management Application Server (icm-as) Helm Chart who want to understand how to configure the chart using the `values.yaml` file. This explicitly includes developers, system administrators, and DevOps engineers who are responsible for deploying and managing the Intershop Commerce Management Application Server in a Kubernetes environment.

If a part of this document only targets a specific audience, it is explicitly marked as such.

== Sections overview

The following table gives a short overview about the different sections (sorted alphabetically):

[cols="1,3",options="header"]
|===
|Section |Topic
|link:values-yaml/no-section.asciidoc[+<none>+]|attributes without any section
|link:values-yaml/copy-sites-dir.asciidoc[copySitesDir]|copy sites directory
|link:values-yaml/customizations.asciidoc[customizations]|customizations to be deployed
|link:values-yaml/database.asciidoc[database]|database configuration
|dockerSecret|deployment of a docker registry secret
|environment|environment variables
|image|icm-as image configuration
|imagePullSecrets|image pull secrets
|ingress|ingress configuration
|infrastructureMonitoring|infrastructure monitoring configuration
|job|job server configuration
|jgroups|jgroups configuration
|jvm|icm-as jvm configuration
|mssql|deployment of an MSSQL database inside a pod
|newrelic|newrelic configuration
|nodeSelector|agent pool assignment
|operationalContext|operational context configuration
|persistence|persistence / volumes configuration
|podBindings|pod bindings
|podSecurityContext|pod security context
|probes|probes (startup, liveness, readiness) configuration
|replication|replication/staging configuration
|resources|resources / limits configuration
|secrets|secrets to be made available as environment variables
|link:values-yaml/secret-mounts.asciidoc[secretMounts]|secrets to be mounted as files / environment variables
|serviceAccount|service account to be deployed
|sslCertificateRetrieval|ssl certificate retrieval
|testConnection|test connection configuration
|tolerations|pod tolerations configuration
|webLayer|web layer (webadapter-replacement) configuration
|===
