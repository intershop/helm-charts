name: "Integration test icm chart"
on:
  pull_request:
    paths:
    - 'charts/icm/**'
#    branches: 
#      - main

jobs:
  lint-test-icm-integrationtest:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Base
      uses: ./.github/template/base

    - name: Run chart-testing (list-changed)
      id: list-changed
      run: |
        changed=$(ct list-changed --config ct_icm.yaml)
        if [[ -n "$changed" ]]; then
          echo "::set-output name=changed::true"
        fi

    - name: Create kind cluster
      if: steps.list-changed.outputs.changed == 'true'
      uses: helm/kind-action@v1.3.0
      with:
        config: kind.yaml

    - name: Log into registry docker.io
      if: steps.list-changed.outputs.changed == 'true'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Run chart-testing (install)
      if: steps.list-changed.outputs.changed == 'true'
      run: |
        set -x
        random_value=`tr -dc 'a-z0-9' < /dev/urandom | head -c10`
        export NAMESPACE=ct-icm-$random_value
        echo "NAMESPACE=$NAMESPACE" >> $GITHUB_ENV

        kubectl create namespace $NAMESPACE

        kubectl create secret docker-registry dockerhub --namespace=$NAMESPACE --docker-username=${{ secrets.DOCKER_USERNAME }} --docker-password=${{ secrets.DOCKER_PASSWORD }} --docker-email=eng-ateam@intershop.com

        mkdir -p /tmp/icm/sites
        mkdir -p /tmp/icm/pagecache
        sed -i 's/<local sites folder>/\/tmp\/icm\/sites/' charts/icm/values.yaml
        sed -i 's/<local pagecache folder>/\/tmp\/icm\/pagecache/' charts/icm/values.yaml

        mkdir -p /tmp/icm/mssql/data
        mkdir -p /tmp/icm/mssql/backup
        sed -i 's/<local mssql data folder>/\/tmp\/icm\/mssql\/data' charts/icm/values.yaml
        sed -i 's/<local mssql backup folder>/\/tmp\/icm\/mssql\/backup' charts/icm/values.yaml

        license=$(cat <<'EOF'
          ${{ secrets.ICM_LICENSE }}
        EOF
        )
        sed -i "s[<your license>[${license//$'\n'/}[" charts/icm/values.yaml

        sed -i '/icm-as:/{n;s/.*/  mssql:\n    enabled: true/}' charts/icm/values.yaml
        
        ct install --namespace=$NAMESPACE --config ct_icm.yaml
    
    - name: Debug failure
      if: failure() && steps.list-changed.outputs.changed == 'true'
      run: |
        kubectl describe node -A
        kubectl describe pod -A
        kubectl describe service -A
        kubectl describe daemonset -A
        kubectl logs $(kubectl get pods -n $NAMESPACE -o jsonpath="{.items[0].metadata.name}")
